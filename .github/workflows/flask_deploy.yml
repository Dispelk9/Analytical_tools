name: Deploy to vhohetzner1
on: push
jobs:
  Test:
    name: Prepare Deploy
    # env:
    #   ACTIONS_STEP_DEBUG: true
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - name: Test Website Online
        run: |
          server=analytical.dispelk9.de
          if nc -z $server 22 2>/dev/null; then
              echo "$server ✓"
          else
              echo "$server ✗"
          fi

  Deploy:
    runs-on: ubuntu-latest
    needs: Test
    if: github.ref == 'refs/heads/master'
    name: Deploy On Hetzner
    # env:
    #   ACTIONS_STEP_DEBUG: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up SSH agent with the private key
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}


      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.IP }} >> ~/.ssh/known_hosts

      - name: Docker Compose with ACT
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.IP }} << EOF

            cat > /${{ secrets.SERVER_USER }}/.env << ENV
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_NAME=${{ secrets.DB_NAME }}
            SESSION_SECRET=${{ secrets.SESSION_SECRET }}
            SENDER=${{ secrets.SENDER }}
            MAIL_PW=${{ secrets.MAIL_PW }}
            SMTP_RELAY=${{ secrets.SMTP_RELAY }}
            ENV         
            
            # Setup SSH agent and clone repository
            eval "$(ssh-agent -s)"
            echo "${{ secrets.SSH_PASSPHRASE }}" | ssh-add /${{ secrets.SERVER_USER }}/.ssh/id_rsa
            git clone git@github.com:Dispelk9/Analytical_tools.git


            # Navigate to project directory
            cd /${{ secrets.SERVER_USER }}/Analytical_tools

            git fetch --all
            git reset --hard origin/master

            # Copy the .env file into your backend folder
            mv /${{ secrets.SERVER_USER }}/.env /${{ secrets.SERVER_USER }}/Analytical_tools/backend/.env

            chmod 600 /${{ secrets.SERVER_USER }}/Analytical_tools/backend/.env

            # Restart Docker Compose setup
            docker compose down
            docker compose build
            docker compose up -d

          EOF

          
