name: Deploy to server or Storage Box
on: push
jobs:
  Test:
    name: Prepare Deploy
    # env:
    #   ACTIONS_STEP_DEBUG: true
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - name: Test Website Online
        run: |
          server=analytical.dispelk9.de
          if nc -z $server 22 2>/dev/null; then
              echo "$server ✓"
          else
              echo "$server ✗"
          fi

  Deploy:
    runs-on: ubuntu-latest
    needs: Test
    if: github.ref == 'refs/heads/master'
    name: Deploy On Hetzner
    # env:
    #   ACTIONS_STEP_DEBUG: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up SSH agent with the private key
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}


      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.IP }} >> ~/.ssh/known_hosts

      - name: Docker Compose with ACT
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.IP }} << EOF

            # Export environment variables from GitHub secrets
            export DB_USERNAME="${{ secrets.DB_USERNAME }}"
            export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
            export DB_HOST="${{ secrets.DB_HOST }}"
            export DB_PORT="${{ secrets.DB_PORT }}"
            export DB_NAME="${{ secrets.DB_NAME }}"
            export SESSION_SECRET="${{ secrets.SESSION_SECRET }}"
            export SENDER="${{ secrets.SENDER }}"
            export MAIL_PW="${{ secrets.MAIL_PW }}"
            export SMTP_RELAY="${{ secrets.SMTP_RELAY }}"

            # Write secrets to .env file explicitly
            echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" > /root/.env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> /root/.env
            echo "DB_HOST=${{ secrets.DB_HOST }}" >> /root/.env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> /root/.env
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> /root/.env
            echo "SESSION_SECRET=${{ secrets.SESSION_SECRET }}" >> /root/.env
            echo "SENDER=${{ secrets.SENDER }}" >> /root/.env
            echo "MAIL_PW=${{ secrets.MAIL_PW }}" >> /root/.env
            echo "SMTP_RELAY=${{ secrets.SMTP_RELAY }}" >> /root/.env

            # Update server and install git if necessary
            sudo apt-get update -y && sudo apt-get install -y git
            
            # Remove old repository
            #sudo rm -rf /root/Analytical_tools
            
            # Setup SSH agent and clone repository
            eval "$(ssh-agent -s)"
            echo "${{ secrets.SSH_PASSPHRASE }}" | ssh-add /root/.ssh/id_rsa
            git clone git@github.com:Dispelk9/Analytical_tools.git


            # Navigate to project directory
            cd /root/Analytical_tools

            git fetch --all
            git reset --hard origin/master

            # Copy the .env file into your backend folder
            cp /root/.env /root/Analytical_tools/backend/.env


            # Copy SSL certificates
            #cp /etc/letsencrypt/live/analytical.dispelk9.de/fullchain.pem ./frontend/apache/fullchain.pem
            #cp /etc/letsencrypt/live/analytical.dispelk9.de/privkey.pem ./frontend/apache/privkey.pem

            # Restart Docker Compose setup
            docker compose down
            docker compose build
            docker compose up -d

          EOF

          
