name: Deploy to server or Storage Box
on: push
jobs:
  Test:
    name: Prepare Deploy
    env:
      ACTIONS_STEP_DEBUG: true
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - name: Test Website Online
        run: |
          server=analytical.dispelk9.de
          if nc -z $server 22 2>/dev/null; then
              echo "$server ✓"
          else
              echo "$server ✗"
          fi

  Deploy:
    runs-on: ubuntu-latest
    needs: Test
    if: github.ref == 'refs/heads/master'
    name: Deploy On Hetzner
    env:
      ACTIONS_STEP_DEBUG: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up SSH agent with the private key
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Docker Compose with ACT
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.IP }} << 'EOF'

            # Export environment variables from GitHub secrets
            export DB_USERNAME="${{ secrets.DB_USERNAME }}"
            export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
            export DB_HOST="${{ secrets.DB_HOST }}"
            export DB_PORT="${{ secrets.DB_PORT }}"
            export DB_NAME="${{ secrets.DB_NAME }}"
            export SESSION_SECRET="${{ secrets.SESSION_SECRET }}"

            # Optionally, write secrets to a .env file (commonly used with Docker)
            cat <<EOL > .env
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_NAME=${{ secrets.DB_NAME }}
            SESSION_SECRET=${{ secrets.SESSION_SECRET }}
            EOL

            
            # Update the server and install git if necessary
            sudo apt-get update -y && sudo apt-get install -y git
            
            # Remove old repository
            sudo rm -rf /root/Analytical_tools
             
            sudo bash -c 'eval "$(ssh-agent -s)" && echo "${{ secrets.SSH_PASSPHRASE }}" | ssh-add /root/.ssh/id_rsa'
            git clone git@github.com:Dispelk9/Analytical_tools.git
            

            cd Analytical_tools

            cp /root/.env /root/Analytical_tools/backend/.env

            # Copy certs into Docker repository
            cp /etc/letsencrypt/live/analytical.dispelk9.de/fullchain.pem ./frontend/apache/fullchain.pem
            cp /etc/letsencrypt/live/analytical.dispelk9.de/privkey.pem ./frontend/apache/privkey.pem

            docker compose down
            docker compose build
            docker compose up -d
          
