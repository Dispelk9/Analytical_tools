name: Continuous Deployment ACT

on:
  push:
    branches: [ master ]

concurrency:
  group: prod-deploy
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      tag: ${{ steps.t.outputs.tag }}

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - id: t
        run: echo "tag=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.G_TOKEN }}

      - name: Build & push backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: ghcr.io/dispelk9/analytical_tools_backend:${{ steps.t.outputs.tag }}

      - name: Build & push frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: ghcr.io/dispelk9/analytical_tools_frontend:${{ steps.t.outputs.tag }}

  deploy:
    runs-on: [self-hosted, act-prod]   
    needs: build-and-push
    environment: production
    permissions:
      contents: read
      packages: read
    timeout-minutes: 15

    steps:
      - name: Checkout deploy folder only
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          sparse-checkout: |
            deploy/
          sparse-checkout-cone-mode: false

      - name: Stage compose + env locally (on the runner host)
        run: |
          mkdir -p ~/app/backend
          # compose file
          cp deploy/docker-compose.yml ~/app/docker-compose.yml
          mkdir -p ~/app/secrets
          umask 177
          printf '%s' '${{ secrets.GEMINI_API_KEY }}' > ~/app/secrets/gemini_api_key

          # backend container env
          umask 177
          cat > ~/app/backend/.env <<'ENV'
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_NAME=${{ secrets.DB_NAME }}
          SESSION_SECRET=${{ secrets.SESSION_SECRET }}
          SENDER=${{ secrets.SENDER }}
          MAIL_PW=${{ secrets.MAIL_PW }}
          SMTP_RELAY=${{ secrets.SMTP_RELAY }}
          ENV

          # compose parse-time vars (DB_PASSWORD for postgres)
          cat > ~/app/.env <<'ENV'
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          ENV

      - name: Deploy this commit (immutable tag)
        env:
          TAG: ${{ needs.build-and-push.outputs.tag }}
          # only needed if GHCR packages are private:
          GHCR_USER: ${{ github.actor }}
          GHCR_TOKEN: ${{ secrets.G_TOKEN }}
        run: |
          # pass GHCR creds only if needed; deploy.sh will login when GHCR_TOKEN is set
          sudo GHCR_USER="$GHCR_USER" GHCR_TOKEN="$GHCR_TOKEN" /usr/local/bin/deploy.sh "$TAG"
